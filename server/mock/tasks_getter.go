// Code generated by counterfeiter. DO NOT EDIT.
package mock

import (
	"sync"

	"github.com/wlahti/lp/server"
)

type TasksGetter struct {
	GetTasksStub        func(int) []string
	getTasksMutex       sync.RWMutex
	getTasksArgsForCall []struct {
		arg1 int
	}
	getTasksReturns struct {
		result1 []string
	}
	getTasksReturnsOnCall map[int]struct {
		result1 []string
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *TasksGetter) GetTasks(arg1 int) []string {
	fake.getTasksMutex.Lock()
	ret, specificReturn := fake.getTasksReturnsOnCall[len(fake.getTasksArgsForCall)]
	fake.getTasksArgsForCall = append(fake.getTasksArgsForCall, struct {
		arg1 int
	}{arg1})
	fake.recordInvocation("GetTasks", []interface{}{arg1})
	fake.getTasksMutex.Unlock()
	if fake.GetTasksStub != nil {
		return fake.GetTasksStub(arg1)
	}
	if specificReturn {
		return ret.result1
	}
	fakeReturns := fake.getTasksReturns
	return fakeReturns.result1
}

func (fake *TasksGetter) GetTasksCallCount() int {
	fake.getTasksMutex.RLock()
	defer fake.getTasksMutex.RUnlock()
	return len(fake.getTasksArgsForCall)
}

func (fake *TasksGetter) GetTasksCalls(stub func(int) []string) {
	fake.getTasksMutex.Lock()
	defer fake.getTasksMutex.Unlock()
	fake.GetTasksStub = stub
}

func (fake *TasksGetter) GetTasksArgsForCall(i int) int {
	fake.getTasksMutex.RLock()
	defer fake.getTasksMutex.RUnlock()
	argsForCall := fake.getTasksArgsForCall[i]
	return argsForCall.arg1
}

func (fake *TasksGetter) GetTasksReturns(result1 []string) {
	fake.getTasksMutex.Lock()
	defer fake.getTasksMutex.Unlock()
	fake.GetTasksStub = nil
	fake.getTasksReturns = struct {
		result1 []string
	}{result1}
}

func (fake *TasksGetter) GetTasksReturnsOnCall(i int, result1 []string) {
	fake.getTasksMutex.Lock()
	defer fake.getTasksMutex.Unlock()
	fake.GetTasksStub = nil
	if fake.getTasksReturnsOnCall == nil {
		fake.getTasksReturnsOnCall = make(map[int]struct {
			result1 []string
		})
	}
	fake.getTasksReturnsOnCall[i] = struct {
		result1 []string
	}{result1}
}

func (fake *TasksGetter) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getTasksMutex.RLock()
	defer fake.getTasksMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *TasksGetter) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ server.TasksGetter = new(TasksGetter)
